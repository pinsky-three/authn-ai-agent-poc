# Copy this file to .env and fill in your actual Okta values
#
# Quick setup:
#   1. Replace YOUR_OKTA_DOMAIN with your actual Okta domain (e.g., dev-12345678.okta.com)
#   2. Replace YOUR_CLIENT_ID with your OIDC app's client ID
#   3. Replace YOUR_CLIENT_SECRET with your OIDC app's client secret
#   4. Generate a new SESSION_SECRET using: python3 -c "import secrets; print(secrets.token_urlsafe(32))"

# ============================================================================
# Okta Configuration
# ============================================================================
# Format: https://YOUR_DOMAIN/oauth2/AUTHZ_SERVER_ID
OKTA_ISSUER=https://YOUR_OKTA_DOMAIN/oauth2/poc

# From your OIDC Application settings
OKTA_CLIENT_ID=YOUR_CLIENT_ID
OKTA_CLIENT_SECRET=YOUR_CLIENT_SECRET

# Must match the redirect URI configured in your Okta app
OIDC_REDIRECT_URI=http://localhost:8080/auth/callback

# ============================================================================
# Token Configuration
# ============================================================================
# Must match the audience configured in your Okta authorization server
ACME_AUDIENCE=api://acme-api

# Space-separated scopes to request
ACME_SCOPES=acme.read

# ============================================================================
# BFF Session Configuration
# ============================================================================
# IMPORTANT: Generate a secure random string for production!
# Run: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
SESSION_SECRET=CHANGE_ME_TO_SECURE_RANDOM_STRING

# Name of the session cookie
SESSION_COOKIE_NAME=poc_session

# ============================================================================
# Infrastructure Configuration
# ============================================================================
# JWKS endpoint for Envoy to validate JWTs
# Format: https://YOUR_DOMAIN/oauth2/AUTHZ_SERVER_ID/v1/keys
ENVOY_JWKS_URI=https://YOUR_OKTA_DOMAIN/oauth2/poc/v1/keys

# Just the hostname (no protocol) for Envoy TLS cluster
# Example: dev-12345678.okta.com
OKTA_ISSUER_HOST=YOUR_OKTA_DOMAIN

# OPA endpoint for authorization decisions
OPA_URL=http://authz:8181/v1/data/policy/allow

# ============================================================================
# Optional: Redis Configuration
# ============================================================================
# If you want to use external Redis instead of Docker Compose Redis
# REDIS_URL=redis://localhost:6379/0

# ============================================================================
# Mock Cognito Configuration (for PoC Testing)
# ============================================================================
# Mock Cognito service endpoint
MOCK_COGNITO_URL=http://mock-cognito:9000
MOCK_COGNITO_URL_EXTERNAL=http://localhost:9000

# JWT configuration (matches mock Cognito settings)
JWT_SECRET=mock-jwt-secret-change-in-production
JWT_ISSUER=http://mock-cognito:9000
JWT_AUDIENCE=api://acme-api

# Test credentials for mock Cognito
# User 1: Developer
TEST_USER_EMAIL=testuser@example.com
TEST_USER_PASSWORD=TestPassword123!
# User 2: Admin
TEST_ADMIN_EMAIL=admin@example.com
TEST_ADMIN_PASSWORD=AdminPass456!

# ============================================================================
# AWS Configuration (for Federation PoC)
# ============================================================================
# Set to true to use mock services instead of real AWS
USE_MOCK_SERVICES=true

AWS_REGION=us-east-1

# IAM Role ARNs for agent operations
# Agent operations role with ABAC tags
IAM_AGENT_OPS_ROLE_ARN=arn:aws:iam::ACCOUNT_ID:role/agent-ops-role

# Read-only role for safe operations
IAM_READONLY_ROLE_ARN=arn:aws:iam::ACCOUNT_ID:role/agent-readonly-role

# AWS Account allow-list (comma-separated)
AWS_ALLOWED_ACCOUNTS=123456789012

# STS Token TTL (in seconds, 900-3600 recommended)
STS_TOKEN_TTL=3600

# Session tags for ABAC (will be populated from Cognito claims)
# Format: key1=value1,key2=value2
# Example: team=platform,project=poc,env=dev,cost_center=engineering
ABAC_SESSION_TAGS=team,project,env,cost_center

# ============================================================================
# GitHub App Configuration (for Federation PoC)
# ============================================================================
# GitHub App credentials
GITHUB_APP_ID=YOUR_GITHUB_APP_ID
GITHUB_APP_INSTALLATION_ID=YOUR_GITHUB_INSTALLATION_ID

# Path to GitHub App private key (PEM format)
# For Docker: mount the key file and reference the container path
GITHUB_APP_PRIVATE_KEY_PATH=/app/secrets/github-app-key.pem
# Alternative: inline private key (not recommended for production)
# GITHUB_APP_PRIVATE_KEY=-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----

# GitHub repository allow-list (comma-separated, format: owner/repo)
GITHUB_ALLOWED_REPOS=your-org/sandbox-repo,your-org/test-repo

# GitHub App token TTL (in seconds, 600-3600 recommended)
GITHUB_TOKEN_TTL=3600

# GitHub API base URL (for GitHub Enterprise, otherwise leave default)
GITHUB_API_URL=https://api.github.com

# ============================================================================
# Observability & Tracing
# ============================================================================
# OpenTelemetry configuration
OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
OTEL_SERVICE_NAME=poc-service

# Enable detailed tracing (true/false)
OTEL_TRACES_ENABLED=true

# Trace sampling rate (0.0 to 1.0)
OTEL_TRACES_SAMPLER_ARG=1.0

# ============================================================================
# Policy Configuration
# ============================================================================
# OPA policy enforcement mode (permissive/strict)
OPA_ENFORCEMENT_MODE=strict

# Policy repository for versioned policies (optional)
POLICY_REPO_URL=https://github.com/your-org/policy-repo.git
POLICY_REPO_BRANCH=main

# ============================================================================
# Security & Audit
# ============================================================================
# Enable audit logging (true/false)
AUDIT_LOGGING_ENABLED=true

# Audit log destination (file path or remote endpoint)
AUDIT_LOG_PATH=/var/log/audit/audit.log

# Require per-user attribution for all actions (true/false)
REQUIRE_USER_ATTRIBUTION=true

# Token introspection endpoint (for revocation checks)
TOKEN_INTROSPECTION_ENABLED=false
TOKEN_INTROSPECTION_URL=https://YOUR_OKTA_DOMAIN/oauth2/poc/v1/introspect
